/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BoardPanel.java
 *
 * Created on 01-Feb-2013, 09:21:59
 */
package uk.ac.man.cs.patterns.battleship.view;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import uk.ac.man.cs.patterns.battleship.domain.battle.Player;
import uk.ac.man.cs.patterns.battleship.domain.battle.Position;
import uk.ac.man.cs.patterns.battleship.utils.Constants;

/**
 *
 * @author memotoro
 */
public class BoardPanel extends javax.swing.JPanel {

    private GameListener gameListener;
    private Player player;

    /** Creates new form BoardPanel */
    public BoardPanel(GameListener gameListener, Player player) {
        initComponents();
        this.gameListener = gameListener;
        this.player = player;
        initializeBoardPanel();
    }

    private void initializeBoardPanel() {
        this.jLabelPlayerName.setText(this.player.getName());
        this.jLabelShipsAvailable.setText(String.valueOf(this.player.getBoard().getShipsAvailable()));
        this.jLabelNotificationMessage.setText(Constants.GAME_MESSAGE_ACTIONS);
        this.jPanelGridPositions.setLayout(new GridLayout(Constants.BOARD_SIZE_WIDTH, Constants.BOARD_SIZE_HEIGHT));
        if (this.player.getName().contains(Constants.GAME_PLAYER_PC)) {
            for (int y = 0; y < Constants.BOARD_SIZE_HEIGHT; y++) {
                for (int x = 0; x < Constants.BOARD_SIZE_WIDTH; x++) {
                    Position position = new Position(x, y);
                    JButton jButton = new JButton();
                    jButton.setPreferredSize(new Dimension(10, 10));
                    ImageIcon img = new ImageIcon(Constants.GAME_PATH_IMAGE_SEA);
//                    if (this.player.getBoard().getPositionsOccupied().contains(position)) {
//                        img = new ImageIcon(Constants.GAME_PATH_IMAGE_SHIP);
//                    }
                    jButton.setIcon(img);
                    jButton.setName(this.player.getName() + Constants.GAME_COORDS_SEPARATOR + x + Constants.GAME_COORDS_SEPARATOR + y);
                    jButton.addActionListener(this.gameListener);
                    this.jPanelGridPositions.add(jButton);
                }
            }
        } else {
            for (int y = 0; y < Constants.BOARD_SIZE_HEIGHT; y++) {
                for (int x = 0; x < Constants.BOARD_SIZE_WIDTH; x++) {
                    Position position = new Position(x, y);
                    JButton jButton = new JButton();
                    ImageIcon img = new ImageIcon(Constants.GAME_PATH_IMAGE_SEA);
                    if (this.player.getBoard().getPositionsOccupied().contains(position)) {
                        img = new ImageIcon(Constants.GAME_PATH_IMAGE_SHIP);
                    }
                    jButton.setIcon(img);
                    jButton.setName(this.player.getName() + Constants.GAME_COORDS_SEPARATOR + x + Constants.GAME_COORDS_SEPARATOR + y);
                    this.jPanelGridPositions.add(jButton);
                }
            }
        }
    }

    public JButton getJButtonByName(String playerName, int coordinateX, int coordinateY) {
        JButton jButton = null;
        for (Component component : this.jPanelGridPositions.getComponents()) {
            if (component instanceof JButton) {
                jButton = (JButton) component;
                if (jButton.getName().equals(playerName + Constants.GAME_COORDS_SEPARATOR + String.valueOf(coordinateX) + Constants.GAME_COORDS_SEPARATOR + String.valueOf(coordinateY))) {
                    break;
                }
            }
        }
        return jButton;
    }

    public void setNotificationMessage(String message) {
        this.jLabelNotificationMessage.setText(Constants.GAME_MESSAGE_ACTIONS + message);
    }

    public Player getPlayer() {
        return player;
    }

    public JLabel getjLabelShipsAvailable() {
        return jLabelShipsAvailable;
    }   
   
    /**
     * This method is called from within the constructor to
     * initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelInfo = new javax.swing.JPanel();
        jLabelPlayerNameLabel = new javax.swing.JLabel();
        jLabelPlayerName = new javax.swing.JLabel();
        jLabelShipsAvailableLabel = new javax.swing.JLabel();
        jLabelShipsAvailable = new javax.swing.JLabel();
        jPanelGridPositions = new javax.swing.JPanel();
        jPanelMessage = new javax.swing.JPanel();
        jLabelNotificationMessage = new javax.swing.JLabel();

        jPanelInfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelPlayerNameLabel.setText("Player Name");

        jLabelPlayerName.setText("Player Name");

        jLabelShipsAvailableLabel.setText("Ships Available");

        jLabelShipsAvailable.setText("Ships Available");

        javax.swing.GroupLayout jPanelInfoLayout = new javax.swing.GroupLayout(jPanelInfo);
        jPanelInfo.setLayout(jPanelInfoLayout);
        jPanelInfoLayout.setHorizontalGroup(
            jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelPlayerNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelShipsAvailableLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelShipsAvailable)
                    .addComponent(jLabelPlayerName))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        jPanelInfoLayout.setVerticalGroup(
            jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPlayerNameLabel)
                    .addComponent(jLabelPlayerName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelShipsAvailableLabel)
                    .addComponent(jLabelShipsAvailable))
                .addContainerGap())
        );

        jPanelGridPositions.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanelGridPositionsLayout = new javax.swing.GroupLayout(jPanelGridPositions);
        jPanelGridPositions.setLayout(jPanelGridPositionsLayout);
        jPanelGridPositionsLayout.setHorizontalGroup(
            jPanelGridPositionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 374, Short.MAX_VALUE)
        );
        jPanelGridPositionsLayout.setVerticalGroup(
            jPanelGridPositionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        jPanelMessage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelNotificationMessage.setText("jLabel1");

        javax.swing.GroupLayout jPanelMessageLayout = new javax.swing.GroupLayout(jPanelMessage);
        jPanelMessage.setLayout(jPanelMessageLayout);
        jPanelMessageLayout.setHorizontalGroup(
            jPanelMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMessageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelNotificationMessage)
                .addContainerGap(314, Short.MAX_VALUE))
        );
        jPanelMessageLayout.setVerticalGroup(
            jPanelMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMessageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelNotificationMessage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelGridPositions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelGridPositions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelNotificationMessage;
    private javax.swing.JLabel jLabelPlayerName;
    private javax.swing.JLabel jLabelPlayerNameLabel;
    private javax.swing.JLabel jLabelShipsAvailable;
    private javax.swing.JLabel jLabelShipsAvailableLabel;
    private javax.swing.JPanel jPanelGridPositions;
    private javax.swing.JPanel jPanelInfo;
    private javax.swing.JPanel jPanelMessage;
    // End of variables declaration//GEN-END:variables
}
